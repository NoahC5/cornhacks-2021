"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.handler = exports.builder = exports.description = exports.command = void 0;

var _filter = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/filter"));

var _generate = require("./generate");

var options = _interopRequireWildcard(require("./options"));

var _lib = require("../../lib");

const command = 'up [increment]';
exports.command = command;
const description = 'Generate the Prisma client and apply migrations';
exports.description = description;

const builder = yargs => {
  yargs.positional('increment', {
    description: 'Number of forward migrations to apply. Defaults to the latest',
    type: 'number'
  }).option('dbClient', {
    default: true,
    description: 'Generate the Prisma client',
    type: 'boolean'
  }).option('autoApprove', {
    default: false,
    description: 'Skip interactive approval before migrating',
    type: 'boolean'
  }).option('verbose', options.verbose()).option('schema', options.schema()).epilogue(options.epilogue());
};

exports.builder = builder;

const handler = async ({
  increment,
  autoApprove = false,
  verbose = true,
  dbClient = true,
  schema
}) => {
  var _context;

  const success = await (0, _lib.runCommandTask)([{
    title: 'Migrate database up...',
    cmd: 'yarn prisma',
    args: (0, _filter.default)(_context = ['migrate up', increment && `${increment}`, '--experimental', '--create-db', autoApprove && '--auto-approve', schema && `--schema="${schema}"`]).call(_context, Boolean)
  }], {
    verbose
  });

  if (success && dbClient) {
    await (0, _generate.handler)({
      force: true,
      verbose,
      schema
    });
  }
};

exports.handler = handler;
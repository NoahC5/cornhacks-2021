"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.handler = exports.builder = exports.description = exports.command = void 0;

var _execa = _interopRequireDefault(require("execa"));

var _colors = _interopRequireDefault(require("../../../../lib/colors"));

// ********
// Deprecated as of September 2020
// Use "setup" command
// ********
const command = 'tailwind';
exports.command = command;
const description = 'WARNING: deprecated. Use "yarn rw setup" command.';
exports.description = description;

const builder = yargs => {
  yargs.option('force', {
    alias: 'f',
    default: false,
    description: 'Overwrite existing configuration',
    type: 'boolean'
  });
};

exports.builder = builder;

const handler = async ({
  force
}) => {
  const cmd = force ? 'yarn rw setup tailwind --force' : 'yarn rw setup tailwind';

  try {
    console.log(_colors.default.warning('\n' + 'WARNING: deprecated "util" command'));
    console.log(_colors.default.green('See "setup" command: ') + 'https://redwoodjs.com/reference/command-line-interface#setup' + '\n');
    await (0, _execa.default)(cmd, {
      stdio: 'inherit',
      shell: true
    });
  } catch (e) {
    console.log(_colors.default.error(e.message));
  }
};

exports.handler = handler;
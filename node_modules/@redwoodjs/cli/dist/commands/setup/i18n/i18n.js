"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.handler = exports.builder = exports.description = exports.command = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _chalk = _interopRequireDefault(require("chalk"));

var _execa = _interopRequireDefault(require("execa"));

var _listr = _interopRequireDefault(require("listr"));

var _lib = require("../../../lib");

var _colors = _interopRequireDefault(require("../../../lib/colors"));

const command = 'i18n';
exports.command = command;
const description = 'Setup i18n';
exports.description = description;

const builder = yargs => {
  yargs.option('force', {
    alias: 'f',
    default: false,
    description: 'Overwrite existing configuration',
    type: 'boolean'
  });
};

exports.builder = builder;

const handler = async ({
  force
}) => {
  const INDEX_JS_PATH = _path.default.join((0, _lib.getPaths)().web.src, 'index.js');

  const tasks = new _listr.default([{
    title: 'Installing packages...',
    task: async () => {
      await (0, _execa.default)('yarn', ['workspace', 'web', 'add', 'i18n', 'i18next', 'i18next-browser-languagedetector', 'i18next-http-backend', 'react-i18next']);
    }
  }, {
    title: 'Configuring i18n...',
    task: () => {
      /**
       * Write i18n.js in web/src
       */
      return (0, _lib.writeFile)(_path.default.join((0, _lib.getPaths)().web.src, 'i18n.js'), _fs.default.readFileSync(_path.default.resolve(__dirname, 'templates', 'i18n.js.template')).toString(), {
        overwriteExisting: force
      });
    }
  }, {
    title: "Adding locale file for 'site' namespace",

    task() {
      return (0, _lib.writeFile)((0, _lib.getPaths)().web.src + '/locales/en/site.json');
    }

  }, {
    title: 'Adding import to index.js...',
    task: () => {
      /**
       * Add i18n import to the top of index.js
       */
      let indexJS = _fs.default.readFileSync(INDEX_JS_PATH);

      indexJS = [`import './i18n'`, indexJS].join(`\n`);

      _fs.default.writeFileSync(INDEX_JS_PATH, indexJS);
    }
  }, {
    title: 'One more thing...',
    task: (_ctx, task) => {
      task.title = `One more thing...\n
          ${_colors.default.green('Quick link to the docs:')}\n
          ${_chalk.default.hex('#e8e8e8')('https://react.i18next.com/guides/quick-start/')}
          ${_chalk.default.hex('#e8e8e8')('https://github.com/i18next/i18next-browser-languageDetector\n')}
        `;
    }
  }]);

  try {
    await tasks.run();
  } catch (e) {
    console.log(_colors.default.error(e.message));
  }
};

exports.handler = handler;